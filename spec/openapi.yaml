openapi: "3.0.2"
info:
  title: TranslanGo server
  version: "1.0"
servers:
  - url: "https://api.translango.com"
paths:
  /user/signup:
    get:
      summary: "signup page"
      tags:
        - "user"
      description: "signup page - list available languages"
      responses:
        200:
          $ref: "#/components/responses/languages"
    post:
      summary: "signup - register user"
      tags:
        - "user"
      description: "register email, password, full name, username, native language and some settings"
      requestBody:
        $ref: "#/components/requestBodies/user"
      responses:
        204:
          description: "ok"
        409:
          description: "user already exists"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
  /user/login:
    post:
      summary: "login"
      tags:
        - "user"
      description: "submit email & password"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "example@translango.com"
                password:
                  type: string
                  example: "passw0rd"
      responses:
        204:
          description: "successfully logged in"
          headers:
            set-cookie:
              schema:
                type: string
              description: "session id for authentication"
        401:
          $ref: "#/components/responses/unauthorized"
  /user/logout:
    parameters:
      - $ref: "#/components/parameters/cookie"
    post:
      summary: "logout"
      tags:
        - "user"
      description: "logout"
      responses:
        204:
          description: "successfully logged out"
        401:
          $ref: "#/components/responses/unauthorized"
  /user/profile:
    parameters:
      - $ref: "#/components/parameters/cookie"
    get:
      summary: "user profile"
      tags:
        - "user"
      description: "retrieve user profile"
      responses:
        200:
          $ref: "#/components/responses/user"
    post:
      summary: "edit user profile"
      tags:
        - "user"
      description: "edit user profile"
      requestBody:
        $ref: "#/components/requestBodies/user"
      responses:
        204:
          description: "ok"
  /dashboard/top:
    parameters:
      - $ref: "#/components/parameters/cookie"
    get:
      summary: "dashboard/main - top"
      tags:
        - "dashboard"
      description: "dashboard/main - list preferred languages"
      responses:
        200:
          $ref: "#/components/responses/languages"
    post:
      summary: "dashboard/main - update preferred language"
      tags:
        - "dashboard"
      description: "dashboard/main - update preferred languages"
      requestBody:
        $ref: "#/components/requestBodies/preferred_languages"
      responses:
        204:
          description: "ok"
  /dashboard/histories:
    parameters:
      - $ref: "#/components/parameters/cookie"
    get:
      summary: "dashboard/histories - list histories"
      tags:
        - "dashboard"
      description: "histories/histories - list histories"
      parameters:
        - $ref: "#/components/parameters/search-query"
      responses:
        200:
          $ref: "#/components/responses/objects"
    post:
      summary: "dashboard/camera - add history (detect object or text)"
      tags:
        - "dashboard"
      description: "dashboard/camera - add history (detect object or text)"
      parameters:
        - $ref: "#/components/parameters/type-query"
      requestBody:
        $ref: "#/components/requestBodies/object"
      responses:
        200:
          $ref: "#/components/responses/object"
  /dashboard/histories/{objectID}:
    parameters:
      - $ref: "#/components/parameters/cookie"
      - $ref: "#/components/parameters/objectID"
    get:
      summary: "dashboard/history - history"
      tags:
        - "dashboard"
      description: "dashboard/history - one history for object"
      responses:
        200:
          $ref: "#/components/responses/object"
  /dashboard/histories/{objectID}/liked:
    parameters:
      - $ref: "#/components/parameters/cookie"
      - $ref: "#/components/parameters/objectID"
    post:
      summary: "dashboard/history - edit liked"
      tags:
        - "dashboard"
      description: "dashboard/history - edit liked"
      requestBody:
        $ref: "#/components/requestBodies/liked"
      responses:
        200:
          $ref: "#/components/responses/object"
        404:
          $ref: "#/components/responses/resource-not-found"
  /dashboard/histories/{objectID}/caption:
    parameters:
      - $ref: "#/components/parameters/objectID"
      - $ref: "#/components/parameters/cookie"
    post:
      summary: "dashboard/histories - edit caption"
      tags:
        - "dashboard"
      description: "dashboard/histories - edit caption"
      requestBody:
        $ref: "#/components/requestBodies/caption"
      responses:
        200:
          $ref: "#/components/responses/object"
        404:
          $ref: "#/components/responses/resource-not-found"
  /dashboard/histories/{objectID}/num_failures:
    parameters:
      - $ref: "#/components/parameters/objectID"
      - $ref: "#/components/parameters/cookie"
    post:
      summary: "dashboard/histories - edit num failures"
      tags:
        - "dashboard"
      description: "dashboard/histories - edit num failures while gaming"
      requestBody:
        $ref: "#/components/requestBodies/num-failures"
      responses:
        200:
          $ref: "#/components/responses/object"
        404:
          $ref: "#/components/responses/resource-not-found"
  /dashboard/histories/{objectID}/original:
    parameters:
      - $ref: "#/components/parameters/objectID"
      - $ref: "#/components/parameters/cookie"
    post:
      summary: "dashboard/histories - edit original language"
      tags:
        - "dashboard"
      description: "dashboard/histories - edit original language"
      requestBody:
        $ref: "#/components/requestBodies/original"
      responses:
        200:
          $ref: "#/components/responses/object"
        404:
          $ref: "#/components/responses/resource-not-found"
  /dashboard/lists:
    parameters:
      - $ref: "#/components/parameters/cookie"
    get:
      summary: "dashboard/list - lists"
      tags:
        - "dashboard"
      description: "dashboard/list - list lists"
      responses:
        200:
          $ref: "#/components/responses/lists"
    post:
      summary: "dashboard/list - add custom list"
      tags:
        - "dashboard"
      description: "dashboard/list - add custom list"
      requestBody:
        $ref: "#/components/requestBodies/list"
      responses:
        200:
          $ref: "#/components/responses/list"
  /dashboards/lists/{listID}:
    parameters:
      - $ref: "#/components/parameters/cookie"
      - $ref: "#/components/parameters/listID"
    get:
      summary: "dashboard/list - start game"
      tags:
        - "dashboard"
      description: "dashboard/list - start game. FE pick a language up from response"
      parameters:
        - name: num_questions
          in: query
          required: true
          schema:
            type: integer
      responses:
        200:
          $ref: "#/components/responses/list"
    put:
      summary: "dashboard - edit list"
      tags:
        - "dashboard"
      description: "list page - edit list"
      requestBody:
        $ref: "#/components/requestBodies/list"
      responses:
        200:
          $ref: "#/components/responses/list"
    delete:
      summary: "dashboard - delete list"
      tags:
        - "dashboard"
      description: "list page - delete list"
      responses:
        204:
          description: "ok"
components:
  schemas:
    objtxt:
      type: object
      properties:
        text:
          type: string
          example: "Dog"
        language:
          type: string
          example: "English"
        sound_url:
          type: string
    bbox:
      type: object
      properties:
        xx:
          type: number
          format: float
        yy:
          type: number
          format: float
        ww:
          type: number
          format: float
        hh:
          type: number
          format: float
    object:
      type: object
      properties:
        id:
          type: string
        original:
          $ref: "#/components/schemas/objtxt"
        target:
          type: array
          items:
            $ref: "#/components/schemas/objtxt"
        bbox:
          $ref: "#/components/schemas/bbox"
        image_url:
          type: string
          example: "https://statics.translango.com/617a283a-44e1-42e5-8a65-c5a29afe51fc.png"
        caption:
          type: string
        country:
          type: string
          example: "Japan"
        city:
          type: string
          example: "Tokyo"
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        liked:
          type: boolean
          example: true
        num_failures:
          type: integer
    list:
      type: object
      properties:
        id:
          type: string
          example: "0af7024f-c8fe-4790-8a96-c59abd904652"
        name:
          type: string
          example: "Animals"
        icon_name:
          type: string
          example: "book"
        objects:
          type: array
          items:
            $ref: "#/components/schemas/object"
    message:
      type: object
      properties:
        message:
          type: string
    user:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          example: "example@translango.com"
        password:
          type: string
          description: "null in response"
        first_name:
          type: string
          example: "John"
        middle_name:
          type: string
        last_name:
          type: string
          example: "Doe"
        username:
          type: string
          example: "johndoe123"
        profile_image:
          type: string
        language:
          type: string
          example: "ja"
        preferred_languages:
          type: array
          items:
            type: string
            example: "ja"
  parameters:
    cookie:
      in: header
      name: cookie
      description: "cookie for identifying user"
      schema:
        type: string
      required: true
    objectID:
      in: path
      name: objectID
      required: true
      description: "object id"
      schema:
        type: string
        example: "617a283a-44e1-42e5-8a65-c5a29afe51fc"
    listID:
      in: path
      name: listID
      required: true
      description: "list id"
      schema:
        type: string
        example: "d676c916-23e6-4f55-b2ce-48d0eec7ed00"
    search-query:
      in: query
      name: key
      description: "search on your translated words"
      required: false
      schema:
        type: string
        example: "dog"
    type-query:
      name: type
      in: query
      required: true
      schema:
        type: string
        enum:
          - "object"
          - "text"
  requestBodies:
    user:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
    preferred_languages:
      content:
        application/json:
          schema:
            type: object
            properties:
              languages:
                type: array
                items:
                  type: string
                  example: "ja"
    object:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                example: "617a283a-44e1-42e5-8a65-c5a29afe51fc"
              image_url:
                type: string
                example: "https://statics.translango.com/617a283a-44e1-42e5-8a65-c5a29afe51fc.png"
              original:
                type: object
                properties:
                  text:
                    type: string
                    description: "nullable when object detection"
                  language:
                    type: string
                    example: "English"
              target:
                type: array
                items:
                  type: object
                  properties:
                    language:
                      type: string
                      example: "ja"
              country:
                type: string
                example: "Japan"
              city:
                type: string
                example: "Tokyo"
              latitude:
                type: number
                format: float
              longitude:
                type: number
                format: float
    liked:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
              liked:
                type: boolean
    caption:
      content:
        application/json:
          schema:
            type: object
            properties:
              caption:
                type: string
    num-failures:
      content:
        application/json:
          schema:
            type: object
            properties:
              num_failures:
                type: integer
    original:
      content:
        application/json:
          schema:
            type: object
            properties:
              original:
                type: object
                properties:
                  text:
                    type: string
                    example: "Dog"
                  language:
                    type: string
                    example: "English"
    list:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/list"
  responses:
    languages:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              languages:
                type: array
                items:
                  type: string
                  example: "ja"
    user:
      description: "ok"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
    objects:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/object"
              total:
                type: integer
    object:
      description: "ok"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/object"
    resource-not-found:
      description: "resource not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/message"
    unauthorized:
      description: "authorization failed"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/message"
    lists:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              default_list:
                $ref: "#/components/schemas/list"
              custom_lists:
                type: array
                items:
                  $ref: "#/components/schemas/list"
              total:
                type: integer
                example: 3
    list:
      description: "ok"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/list"
